{"ts":1378588221228,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n * mientras el formato \".sbt\" no soporte multi-proyecto, mejor usar \".scala\"\n */\n\npackage nube\n\nimport sbt._\nimport sbt.Process._\nimport sbt.Keys._\n\n\n/*\n *\n */\n \nobject BuildSettings {\n  val buildSettings = Defaults.defaultSettings ++ Seq(\n    organization := \"cl.fbd\",\n    version      := \"1.0\",\n    scalaVersion := \"2.10.0\",  // \"2.9.1\" \n    resolvers    := Seq (Resolvers.typesafe)\n  )\n}\n\n/*\n *\n */\n\nobject Resolvers {\n  val typesafe    = \"Typesafe Repo\" at \"http://repo.typesafe.com/typesafe/releases/\"\n}\n\n/*\n *\n */\n\nobject Dependencies {\n}\n\n/*\n *\n */\n\nobject NubeBuild extends Build {\n  import Resolvers._\n  import BuildSettings._\n  import Dependencies._\n\n  // un solo proyecto por el momento\n  lazy val all = Project (\n    id = \"all\",\n    base = file (\".\")\n  ) aggregate (main)\n  \n  // proyecto\n  lazy val main = Project(\n    id = \"sbt_nube-main\",\n    base = file(\"sbt_nube-main\")\n    )    \n}\n"]],"start1":0,"start2":0,"length1":0,"length2":902}]],"length":902}
{"contributors":[],"silentsave":false,"ts":1378588248745,"patch":[[{"diffs":[[0,"te (main"],[1,", api"],[0,")\n  \n  /"]],"start1":777,"start2":777,"length1":16,"length2":21},{"diffs":[[0,"  )    \n"],[1,"    \n  lazy val api = Project(\n    id = \"sbt_nube-api\",\n    base = file(\"sbt_nube-api\")\n    )    \n"],[0,"}\n"]],"start1":897,"start2":897,"length1":10,"length2":108}]],"length":1005,"saved":false}
{"ts":1378588630913,"patch":[[{"diffs":[[0,"main\")\n    )"],[1,".dependsOn (api)"],[0,"    \n    \n  "]],"start1":888,"start2":888,"length1":24,"length2":40}]],"length":1021,"saved":false}
